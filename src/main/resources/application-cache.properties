
spring.jpa.properties.hibernate.cache.use_second_level_cache=true



# Region Factory
# Hibernate second-level caching is designed to be unaware of the actual cache provider used.
# Hibernate only needs to be provided with an implementation of the org.hibernate.cache.spi.RegionFactory interface which encapsulates all details
# specific to actual cache providers. Basically, it acts as a bridge between Hibernate and cache providers.
# Here Ehcache as a cache provider, which is a mature and widely used cache. You can pick any other provider of course,
# as long as there is an implementation of a RegionFactory for it.
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory

# We are telling hibernate we want a shared cache across objects or sessions
spring.jpa.properties.javax.persistence.sharedCache.mode=ALL
# ITS A GOOD PRACTICE TO CREATE AN XML INSTEAD OF default
spring.cache.ehcache.config=classpath:ehcache.xml

#Results of HQL(hibernate query language) queries can also be cached. This is useful if you frequently execute a query on entities that rarely change.
hibernate.cache.use_query_cache=true